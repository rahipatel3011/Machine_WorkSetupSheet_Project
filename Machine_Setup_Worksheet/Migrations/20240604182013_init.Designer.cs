// <auto-generated />
using System;
using Machine_Setup_Worksheet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Machine_Setup_Worksheet.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240604182013_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Machine_Setup_Worksheet.Models.Jaw", b =>
                {
                    b.Property<Guid>("JawId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JawName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JawId");

                    b.ToTable("Jaws");

                    b.HasData(
                        new
                        {
                            JawId = new Guid("38834df6-17d9-439f-b969-0e9e830788fc"),
                            JawName = "Hard Jaws"
                        });
                });

            modelBuilder.Entity("Machine_Setup_Worksheet.Models.Machine", b =>
                {
                    b.Property<Guid>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MachineId");

                    b.ToTable("Machines");

                    b.HasData(
                        new
                        {
                            MachineId = new Guid("0a1cee36-36fa-43f1-a943-86799ba5edcc"),
                            MachineName = "Hwacheon"
                        });
                });

            modelBuilder.Entity("Machine_Setup_Worksheet.Models.Setup", b =>
                {
                    b.Property<Guid>("SetupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JawId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("MaterialSize")
                        .HasColumnType("float");

                    b.Property<string>("SetupImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SetupNumber")
                        .HasColumnType("int");

                    b.Property<string>("Toothinfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WorkSetupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SetupId");

                    b.HasIndex("JawId");

                    b.HasIndex("WorkSetupId");

                    b.ToTable("Setups");
                });

            modelBuilder.Entity("Machine_Setup_Worksheet.Models.WorkSetup", b =>
                {
                    b.Property<Guid>("WorkSetupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkSetupId");

                    b.ToTable("WorkSetups");
                });

            modelBuilder.Entity("Machine_Setup_Worksheet.Models.Setup", b =>
                {
                    b.HasOne("Machine_Setup_Worksheet.Models.Jaw", "Jaw")
                        .WithMany()
                        .HasForeignKey("JawId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Machine_Setup_Worksheet.Models.WorkSetup", "WorkSetup")
                        .WithMany("Setups")
                        .HasForeignKey("WorkSetupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jaw");

                    b.Navigation("WorkSetup");
                });

            modelBuilder.Entity("Machine_Setup_Worksheet.Models.WorkSetup", b =>
                {
                    b.Navigation("Setups");
                });
#pragma warning restore 612, 618
        }
    }
}
